import{inject as e,computed as n,onMounted as t,onUnmounted as o,ref as c,watch as i,defineComponent as s,openBlock as l,createElementBlock as a,Fragment as r,unref as u,createCommentVNode as d,normalizeClass as v,createElementVNode as m,renderList as p,toDisplayString as C,provide as y,renderSlot as g}from"vue";import{useSelector as f,useActor as k}from"@xstate/vue";const _=Symbol();function b(){return{...e(_).dialog}}function w(){const{client:n}=e(_);return f(n._service,(e=>e.context.providers))}const h=(c={})=>{const{onConnect:i=(()=>{}),onDisconnect:s=(()=>{})}=c,{client:l}=e(_),a=f(l._service,(e=>e.context.principal)),r=f(l._service,(e=>e.context.activeProvider)),u=f(l._service,(e=>e.value.idle)),{state:d}=k(l._service),v=n((()=>d.value.matches({idle:"connected"})??!1)),m=n((()=>d.value.matches({idle:"initializing"})??!1)),p=n((()=>d.value.matches({idle:"connecting"})??!1)),C=n((()=>d.value.matches({idle:"disconnecting"})??!1)),y=n((()=>d.value.matches({idle:"idle"})??!1));let g,b;return t((()=>{g=l.on("connect",i),b=l.on("disconnect",s)})),o((()=>{g(),b()})),{principal:a,status:u,activeProvider:r,isConnected:v,isConnecting:p,isDisconnecting:C,isInitializing:m,isIdle:y,connect:e=>{l._service.send({type:"CONNECT",data:{provider:e}})},disconnect:()=>{l._service.send({type:"DISCONNECT"})}}},D=()=>{const{isConnected:e,activeProvider:t}=h(),o=n((()=>!!t.value?.meta.features.includes("wallet")));return[n((()=>e.value&&o.value&&t.value?t.value:void 0)),{loading:c(!0),error:c(!1)}]},x=()=>{const[e]=D(),n=c(),t=c(!0),o=c(),s=async()=>{const n=e.value;if(!n)return void(o.value=void 0);const c=await(n.queryBalance?.());return o.value=c,t.value=!1,c};return i(e,(e=>{s()})),[o,{loading:t,error:n,refetch:s}]},I=({amount:e,to:n,from:t})=>{const[o]=D();h();const i=c(!0),s=c();return[async()=>{const t=o.value;if(!t)return;i.value=!0;const c=await(t.requestTransfer?.({amount:e,to:n}).catch((e=>{s.value=e})));return i.value=!1,c},{loading:i,error:s}]},P=(t,o={mode:"auto"})=>{const{mode:i}=o,{client:s}=e(_),l=f(s._service,(e=>e.context.anonymousActors[t])),a=f(s._service,(e=>e.context.actors[t])),{isConnected:r}=h(),u=n((()=>r.value&&a.value&&"anonymous"!==i?a.value:l.value)),d=n((()=>!u.value)),v=c(!1);return[u,{error:v,loading:d}]};var B=s({props:{dark:{type:Boolean,default:!1},style:{type:String,default:""}},emits:["onConnect","onDisconnect"],setup(e,{emit:n}){const{open:t}=b();let{isConnected:o,disconnect:c}=h({onConnect:()=>{n("onConnect",{})},onDisconnect:()=>{n("onDisconnect",{})}});return(e,n)=>(l(),a(r,null,[u(o)?(l(),a("button",{key:0,class:"connect-button",onClick:n[0]||(n[0]=()=>u(c)())}," Disconnect ")):d("v-if",!0),u(o)?d("v-if",!0):(l(),a("button",{key:1,class:"connect-button",onClick:n[1]||(n[1]=()=>u(t)())}," Connect "))],64))}});B.__file="src/components/ConnectButton.vue";const q=["onClick"],E=["src"],N={class:"button-label"};var O=s({props:{dark:{type:Boolean,required:!1}},emits:["onClose","onClickInside"],setup(e,{emit:n}){const{isOpen:c,close:s,open:y}=b(),g=w(),{connect:f}=h({onConnect:()=>{s()}});i(c,(e=>{e&&(document.body.style.overflow="hidden"),e||(document.body.style.overflow="unset")}));const k=()=>{s(),n("onClose")},_=e=>{e.stopPropagation(),n("onClickInside")},D=e=>{27===e.keyCode&&s()};return t((()=>window.addEventListener("keydown",D))),o((()=>window.removeEventListener("keydown",D))),(n,t)=>u(c)?(l(),a("div",{key:0,class:v("dialog-styles "+(e.dark?" dark":" light")),onClick:k},[m("div",{onClick:_,class:"dialog-container"},[m("div",null,[(l(!0),a(r,null,p(u(g),(n=>(l(),a("button",{key:n.meta.id,onClick:()=>u(f)(n.meta.id),class:v(`button-styles ${n.meta.id}-styles`)},[m("img",{class:"img-styles",src:e.dark?n.meta.icon.dark:n.meta.icon.light},null,8,E),m("div",null,[m("span",N,C(n.meta.name),1)])],10,q)))),128))])])],2)):d("v-if",!0)}});O.__file="src/components/ConnectDialog.vue";var S=s({props:{client:{type:null,required:!0}},setup(e){const{client:n}=e;let t=c(!1);return y(_,{dialog:{open:()=>{t.value=!0},close:()=>{t.value=!1},isOpen:t},client:n}),(e,n)=>g(e.$slots,"default")}});S.__file="src/Connect2ICProvider.vue";export{S as Connect2ICProvider,B as ConnectButton,O as ConnectDialog,x as useBalance,P as useCanister,h as useConnect,b as useDialog,w as useProviders,I as useTransfer,D as useWallet};
//# sourceMappingURL=connect2ic-vue.esm.js.map
