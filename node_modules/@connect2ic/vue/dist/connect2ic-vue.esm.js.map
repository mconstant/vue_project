{"version":3,"file":"connect2ic-vue.esm.js","sources":["../src/context.ts","../src/composables/useDialog.ts","../src/composables/useProviders.ts","../src/composables/useConnect.ts","../src/composables/useWallet.ts","../src/composables/useBalance.ts","../src/composables/useTransfer.ts","../src/composables/useCanister.ts","../src/components/ConnectButton.vue","../src/components/ConnectDialog.vue","../src/Connect2ICProvider.vue"],"sourcesContent":["import type { InjectionKey, Ref } from \"vue\"\nimport type { createClient } from \"@connect2ic/core\"\n\nexport type ContextState = {\n  client: ReturnType<typeof createClient>\n  dialog: {\n    open: () => void\n    close: () => void\n    isOpen: Ref<boolean>\n  }\n}\n\nconst contextKey: InjectionKey<ContextState> = Symbol()\n\nexport { contextKey }\n","import { contextKey } from \"../context\"\nimport {inject} from \"vue\"\n\nexport function useDialog() {\n  const context = inject(contextKey)\n  return {\n    ...context.dialog\n  }\n}","import { contextKey } from \"../context\"\nimport { useSelector } from \"@xstate/vue\"\nimport { inject } from \"vue\"\n\nexport function useProviders() {\n  const {client} = inject(contextKey)\n  return useSelector(client._service, (state) => state.context.providers)\n}\n","import { inject, computed, watch, onMounted, onUnmounted } from \"vue\"\nimport { useSelector } from \"@xstate/vue\"\nimport { contextKey } from \"../context\"\nimport { useActor } from \"@xstate/vue\"\n\ntype Props = {\n  onConnect?: () => void\n  onDisconnect?: () => void\n}\n\nconst useConnect = (props: Props = {}) => {\n  const {\n    onConnect = () => {\n    },\n    onDisconnect = () => {\n    },\n  } = props\n  const { client } = inject(contextKey)\n  const principal = useSelector(client._service, state => state.context.principal)\n  const activeProvider = useSelector(client._service, state => state.context.activeProvider)\n  // @ts-ignore\n  const status = useSelector(client._service, state => state.value.idle)\n  const { state } = useActor(client._service)\n  const isConnected = computed(() => state.value.matches({ idle: \"connected\" }) ?? false)\n  const isInitializing = computed(() => state.value.matches({ idle: \"initializing\" }) ?? false)\n  const isConnecting = computed(() => state.value.matches({ idle: \"connecting\" }) ?? false)\n  const isDisconnecting = computed(() => state.value.matches({ idle: \"disconnecting\" }) ?? false)\n  const isIdle = computed(() => state.value.matches({ idle: \"idle\" }) ?? false)\n\n  let unsub\n  let unsub2\n  onMounted(() => {\n    unsub = client.on(\"connect\", onConnect)\n    unsub2 = client.on(\"disconnect\", onDisconnect)\n  })\n  onUnmounted(() => {\n    unsub()\n    unsub2()\n  })\n\n  return {\n    principal,\n    status,\n    activeProvider,\n    isConnected,\n    isConnecting,\n    isDisconnecting,\n    isInitializing,\n    isIdle,\n    connect: (provider) => {\n      client._service.send({ type: \"CONNECT\", data: { provider } })\n    },\n    disconnect: () => {\n      client._service.send({ type: \"DISCONNECT\" })\n    },\n  }\n}\n\nexport { useConnect }","import { useConnect } from \"./useConnect\"\nimport type { IConnector, IWalletConnector } from \"@connect2ic/core\"\nimport { computed, ref } from \"vue\"\nimport type { Ref } from \"vue\"\n\nexport const useWallet = () => {\n  const { isConnected, activeProvider } = useConnect()\n  const supportsWallet = computed(() => !!activeProvider.value?.meta.features.includes(\"wallet\"))\n  const wallet: Ref<IConnector & Partial<IWalletConnector> | undefined> = computed(() => {\n    return isConnected.value && supportsWallet.value && activeProvider.value ? (activeProvider.value as IConnector & Partial<IWalletConnector>) : undefined\n  })\n  const loading = ref(true)\n  const error = ref(false)\n\n  return [wallet, { loading, error }] as const\n}\n","import { useWallet } from \"./useWallet\"\nimport { ref, watch } from \"vue\"\n\ntype Asset = {\n  amount: number\n  canisterId: string\n  decimals: number\n  image?: string\n  name: string\n  symbol: string\n}\n\nexport const useBalance = () => {\n  // TODO: check if supported or not\n  const [wallet] = useWallet()\n  // TODO:\n  const error = ref()\n  const loading = ref(true)\n  const assets = ref()\n\n  // TODO: fix\n  const refetch = async () => {\n    const $wallet = wallet.value\n    if (!$wallet) {\n      assets.value = undefined\n      return\n    }\n    const result = await $wallet.queryBalance?.()\n    assets.value = result\n    loading.value = false\n    return result\n  }\n\n  watch(wallet, ($wallet) => {\n    refetch()\n  })\n\n  return [assets, { loading, error, refetch }] as const\n}\n","import { useConnect } from \"./useConnect\"\nimport { useWallet } from \"./useWallet\"\nimport { ref } from \"vue\"\n\ntype Props = {\n  amount: number,\n  to: string,\n  from?: string,\n}\n\nexport const useTransfer = ({ amount, to, from = undefined }: Props) => {\n  // TODO: check if supported or not\n  const [wallet] = useWallet()\n  const { principal } = useConnect()\n  const loading = ref(true)\n  const error = ref()\n\n  const transfer = async () => {\n    const $wallet = wallet.value\n    if (!$wallet) {\n      return\n    }\n    loading.value = true\n    const result = await $wallet.requestTransfer?.({\n      amount,\n      to,\n    }).catch(e => {\n      error.value = e\n    })\n    loading.value = false\n    return result\n  }\n\n  return [transfer, { loading, error }] as const\n}\n","import { useConnect } from \"./useConnect\"\nimport { useSelector } from \"@xstate/vue\"\nimport { inject, ref, computed } from \"vue\"\nimport type { Ref } from \"vue\"\nimport { contextKey } from \"../context\"\nimport type { ActorSubclass } from \"@dfinity/agent\"\n\nexport const useCanister = (\n  canisterName: string,\n  options: { mode: string } = {\n    mode: \"auto\", // \"anonymous\" | \"connected\"\n  },\n) => {\n  const { mode } = options\n  const { client } = inject(contextKey)\n  const anonymousActor = useSelector(client._service, (state) => state.context.anonymousActors[canisterName])\n  const actor = useSelector(client._service, (state) => state.context.actors[canisterName])\n  const { isConnected } = useConnect()\n  // @ts-ignore\n  const canister: Ref<ActorSubclass> = computed(() => {\n    return isConnected.value && actor.value && mode !== \"anonymous\" ? actor.value : anonymousActor.value\n  })\n  // TODO:\n  const loading = computed(() => !canister.value)\n  const error = ref(false)\n\n  return [canister, { error, loading }] as const\n}\n","<script setup lang=\"ts\">\nimport { useConnect, useDialog } from \"../composables\"\n\nconst emit = defineEmits([\"onConnect\", \"onDisconnect\"])\nconst props = defineProps({\n  dark: {\n    type: Boolean,\n    default: false,\n  },\n  style: {\n    type: String,\n    default: \"\",\n  },\n})\n\nconst { open } = useDialog()\n\nconst onConnect = () => {\n  emit(\"onConnect\", {})\n}\n\nconst onDisconnect = () => {\n  emit(\"onDisconnect\", {})\n}\n\nlet { isConnected, disconnect } = useConnect({\n  // providers,\n  onConnect,\n  onDisconnect,\n})\n\n</script>\n\n<template>\n  <button v-if=\"isConnected\" class=\"connect-button\" @click=\"() => disconnect()\">\n    Disconnect\n  </button>\n\n  <button v-if=\"!isConnected\" class=\"connect-button\" @click=\"() => open()\">\n    Connect\n  </button>\n</template>\n\n","<script setup lang=\"ts\">\nimport { onMounted, onUnmounted, watch } from \"vue\"\nimport { useConnect, useDialog, useProviders } from \"../composables\"\n\nconst { isOpen, close, open } = useDialog()\nconst providers = useProviders()\n\nconst { connect } = useConnect({\n  onConnect: () => {\n    close()\n  },\n})\n\nwatch(isOpen, ($isOpen) => {\n  if ($isOpen) {\n    document.body.style.overflow = \"hidden\"\n  }\n  if (!$isOpen) {\n    document.body.style.overflow = \"unset\"\n  }\n})\n\nconst emit = defineEmits([\"onClose\", \"onClickInside\"])\nconst onClose = () => {\n  close()\n  emit(\"onClose\")\n}\n\nconst onClickInside = (e) => {\n  e.stopPropagation()\n  emit(\"onClickInside\")\n}\n\nconst { dark = false } = defineProps<{\n  dark?: boolean\n}>()\n\nconst handleEsc = (event) => {\n  if (event.keyCode === 27) {\n    close()\n  }\n}\nonMounted(() => window.addEventListener(\"keydown\", handleEsc))\nonUnmounted(() => window.removeEventListener(\"keydown\", handleEsc))\n\n</script>\n\n<template>\n  <div v-if=\"isOpen\" :class=\"`dialog-styles ${dark ? ' dark' : ' light'}`\" @click=\"onClose\">\n    <div @click=\"onClickInside\" class=\"dialog-container\">\n      <div>\n        <button v-for=\"provider in providers\" :key=\"provider.meta.id\" @click=\"() => connect(provider.meta.id)\"\n                :class=\"`button-styles ${provider.meta.id}-styles`\">\n          <img class=\"img-styles\" :src=\"dark ? provider.meta.icon.dark : provider.meta.icon.light\" />\n          <div>\n            <span class=\"button-label\">{{ provider.meta.name }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>","<script setup lang=\"ts\">\nimport { ref, provide } from \"vue\"\nimport { contextKey } from \"./context\"\nimport type { createClient } from \"@connect2ic/core\"\n\nlet open = ref(false)\nconst dialog = {\n  open: () => {\n    open.value = true\n  },\n  close: () => {\n    open.value = false\n  },\n  isOpen: open,\n}\n\nconst { client } = defineProps<{\n  client: ReturnType<typeof createClient>\n}>()\n\nprovide(contextKey, {\n  dialog,\n  client,\n})\n\n</script>\n<template>\n  <slot></slot>\n</template>\n"],"names":["contextKey","Symbol","useDialog","inject","dialog","useProviders","client","useSelector","_service","state","context","providers","useConnect","props","onConnect","onDisconnect","principal","activeProvider","status","value","idle","useActor","isConnected","computed","matches","isInitializing","isConnecting","isDisconnecting","isIdle","unsub","unsub2","onMounted","on","onUnmounted","connect","provider","send","type","data","disconnect","useWallet","supportsWallet","meta","features","includes","undefined","loading","ref","error","useBalance","wallet","assets","refetch","async","$wallet","result","queryBalance","watch","useTransfer","amount","to","from","requestTransfer","catch","e","useCanister","canisterName","options","mode","anonymousActor","anonymousActors","actor","actors","canister","open","emit","isOpen","close","$isOpen","document","body","style","overflow","onClose","onClickInside","stopPropagation","handleEsc","event","keyCode","window","addEventListener","removeEventListener","provide"],"mappings":"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"}